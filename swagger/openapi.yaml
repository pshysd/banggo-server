openapi: 3.0.0
info:
  version: 1.0.0
  title: BANGGO API SERVER
  description: BANGGO 서비스에서 사용되는 API들을 정리해두었습니다.
  license:
    name: 박성현
servers:
  - url: http://localhost:3005/api
components:
  schemas:
    user:
      properties:
        id:
          type: string
          description: 유저 uuid
          format: uuid
          nullable: false
        email:
          type: string
          description: 유저 이메일
          format: email
          nullable: false
        password:
          type: string
          description: 유저 비밀번호
          nullable: false
        nickname:
          type: string
          description: 유저 닉네임
          nullable: false
          default: 기입하지 않을 경우 랜덤 생성
        contact:
          type: string
          description: 유저 연락처
          nullable: true
        provider:
          type: string
          description: 유저 가입 경로(카카오, 구글, 로컬 등)
          nullable: false
          enum:
            - local
            - kakao
            - google
        providerId:
          type: string
          description: SNS 가입 시 제공되는 providerId
          nullable: true
        createdAt:
          type: string
          format: date
          description: 유저 가입일
        updatedAt:
          type: string
          format: date
          description: 유저 정보 수정일
          default: createdAt
        deletedAt:
          type: string
          format: date
          description: 유저 회원탈퇴일(일주일이 지날 경우 force delete 수행)
    categories:
      properties:
        id:
          type: number
          description: 카테고리 id
          nullable: false
        name:
          type: string
          description: 카테고리명
          nullable: false
    counselings:
      properties:
        id:
          type: number
          description: 고민상담 id
          nullable: false
        userId:
          type: string
          format: uuid
          description: 고민상담 작성자 id
          nullable: false
        category:
          type: number
          description: 카테고리 id
          nullable: false
        title:
          type: string
          description: 고민상담 주제
          nullable: false
        AIAnswer:
          type: string
          description: AI의 답변 기록
          nullable: true
    Error:
      type: object
      properties:
        number:
          type: number
        message:
          type: string
  #Examples
  examples:
    userExample:
      value:
        {
          id: ff6d64ef-dfcb-4eb7-ad62-de0809e11960,
          email: pshysd@kakao.com,
          password: $2b$12$hZVGdvJw4/8z4leqy4wh7eHZ2g5fuDIUUsYvSipzEZuZtQT4ytaOi,
          nickname: 성현,
          contact: NULL,
          provider: local,
          providerId: NULL,
          createdAt: 2024-01-30 18:23:51,
          updatedAt: 2024-01-30 18:23:51,
          deletedAt: NULL,
        }
  responses:
    successResponse:
      description: successful request with no data
      content:
        application/json:
          schema:
            type: object
            example: { "status": 200, "success": true, "message": "message" }
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            success: false
            message: 잘못된 요청
    InternalServerError:
      description: 서버 에러
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            success: false
            message: 서버 내부 오류
#Paths api 경로 지정
paths:
  /user:
    $ref: "./user.yaml#/~1user"
  /user/{userId}:
    $ref: "./user.yaml#/~1user~1{userId}"
